{"version":3,"file":"static/js/449.810c0d3e.chunk.js","mappings":"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","sources":["../../../modules/purchase/dist/esm/service/ProductService.js","../../../modules/purchase/dist/esm/main/ListView.js","../../../modules/purchase/dist/esm/main/Purchase.js"],"sourcesContent":["export class ProductService {\n    getProductsSmall() {\n        return fetch('data/products-small.json').then(res => res.json()).then(d => d.data);\n    }\n    getProducts() {\n        const url = !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? 'api/products' : 'data/products.json';\n        return fetch(url).then(res => res.json()).then(d => d);\n    }\n    getProductsWithOrdersSmall() {\n        return fetch('data/products-orders-small.json').then(res => res.json()).then(d => d.data);\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { FilterMatchMode, FilterOperator } from 'primereact/api';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { Slider } from 'primereact/slider';\nconst ListView = ({ data, header }) => {\n    const [customers, setCustomers] = useState(data);\n    const [selectedCustomers, setSelectedCustomers] = useState(null);\n    const [filters, setFilters] = useState({\n        'global': { value: null, matchMode: FilterMatchMode.CONTAINS },\n        'name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n        'country.name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n        'representative': { value: null, matchMode: FilterMatchMode.IN },\n        'date': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }] },\n        'balance': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n        'status': { operator: FilterOperator.OR, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n        'activity': { value: null, matchMode: FilterMatchMode.BETWEEN }\n    });\n    const [globalFilterValue, setGlobalFilterValue] = useState('');\n    const [loading, setLoading] = useState(true);\n    const representatives = [\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\n        { name: \"Anna Fali\", image: 'annafali.png' },\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\n    ];\n    const statuses = [\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\n    ];\n    useEffect(() => {\n        setCustomers(data);\n    }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n    const getCustomers = (data) => {\n        return [...data || []].map(d => {\n            d.date = new Date(d.date);\n            return d;\n        });\n    };\n    const formatDate = (value) => {\n        return value.toLocaleDateString('en-US', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n        });\n    };\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    };\n    const onGlobalFilterChange = (e) => {\n        const value = e.target.value;\n        let _filters = Object.assign({}, filters);\n        _filters['global'].value = value;\n        setFilters(_filters);\n        setGlobalFilterValue(value);\n    };\n    const dateBodyTemplate = (rowData) => {\n        return formatDate(rowData.date);\n    };\n    const dateFilterTemplate = (options) => {\n        return React.createElement(Calendar, { value: options.value, onChange: (e) => options.filterCallback(e.value, options.index), dateFormat: \"mm/dd/yy\", placeholder: \"mm/dd/yyyy\", mask: \"99/99/9999\" });\n    };\n    const balanceBodyTemplate = (rowData) => {\n        return formatCurrency(rowData.price);\n    };\n    const balanceFilterTemplate = (options) => {\n        return React.createElement(InputNumber, { value: options.value, onChange: (e) => options.filterCallback(e.value, options.index), mode: \"currency\", currency: \"USD\", locale: \"en-US\" });\n    };\n    const statusBodyTemplate = (rowData) => {\n        return React.createElement(\"span\", { className: `customer-badge status-${rowData.status}` }, rowData.status);\n    };\n    const statusFilterTemplate = (options) => {\n        return React.createElement(Dropdown, { value: options.value, options: statuses, onChange: (e) => options.filterCallback(e.value, options.index), itemTemplate: statusItemTemplate, placeholder: \"Select a Status\", className: \"p-column-filter\", showClear: true });\n    };\n    const statusItemTemplate = (option) => {\n        return React.createElement(\"span\", { className: `customer-badge status-${option}` }, option);\n    };\n    // const activityBodyTemplate = (rowData: any) => {\n    //     return <ProgressBar value={rowData.description} showValue={false}></ProgressBar>;\n    // }\n    const activityFilterTemplate = (options) => {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Slider, { value: options.value, onChange: (e) => options.filterCallback(e.value), range: true, className: \"m-3\" }),\n            React.createElement(\"div\", { className: \"flex align-items-center justify-content-between px-2\" },\n                React.createElement(\"span\", null, options.value ? options.value[0] : 0),\n                React.createElement(\"span\", null, options.value ? options.value[1] : 100))));\n    };\n    const actionBodyTemplate = () => {\n        return React.createElement(Button, { type: \"button\", icon: \"pi pi-cog\" });\n    };\n    return (React.createElement(DataTable, { value: customers, paginator: true, className: \"p-datatable-customers\", header: header, rows: 10, paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\", rowsPerPageOptions: [10, 25, 50], dataKey: \"id\", rowHover: true, selection: selectedCustomers, onSelectionChange: e => setSelectedCustomers(e.value), filters: filters, filterDisplay: \"menu\", responsiveLayout: \"scroll\", globalFilterFields: ['name', 'country.name', 'representative.name', 'balance', 'status'], emptyMessage: \"No customers found.\", currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} entries\" },\n        React.createElement(Column, { selectionMode: \"multiple\", headerStyle: { width: '3em' } }),\n        React.createElement(Column, { field: \"name\", header: \"Name\", sortable: true, filter: true, filterPlaceholder: \"Search by name\", style: { minWidth: '14rem' } }),\n        React.createElement(Column, { field: \"price\", header: \"Price\", sortable: true, dataType: \"numeric\", style: { minWidth: '8rem' }, body: balanceBodyTemplate, filter: true, filterElement: balanceFilterTemplate }),\n        React.createElement(Column, { field: \"quantity\", header: \"quantity\", sortable: true, dataType: \"numeric\", style: { minWidth: '8rem' } }),\n        React.createElement(Column, { field: \"category\", header: \"category\", sortable: true, filterMenuStyle: { width: '14rem' }, style: { minWidth: '10rem' } }),\n        React.createElement(Column, { field: \"description\", header: \"description\", sortable: true, showFilterMatchModes: false, style: { minWidth: '10rem' } }),\n        React.createElement(Column, { headerStyle: { width: '4rem', textAlign: 'center' }, bodyStyle: { textAlign: 'center', overflow: 'visible' }, body: actionBodyTemplate })));\n};\nexport default ListView;\n","import React, { useState, useEffect } from 'react';\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useAppSelector, useAppDispatch, selectCount, counterActions } from '@igblsln/store';\nimport { ProductService } from '../service/ProductService';\nimport { Rating } from 'primereact/rating';\nimport ListView from './ListView';\nconst Purchase = () => {\n    const [products, setProducts] = useState([]);\n    const [layout, setLayout] = useState('grid');\n    const [sortKey, setSortKey] = useState(null);\n    const [sortOrder, setSortOrder] = useState(null);\n    const [sortField, setSortField] = useState(undefined);\n    const sortOptions = [\n        { label: 'Price High to Low', value: '!price' },\n        { label: 'Price Low to High', value: 'price' },\n    ];\n    const productService = new ProductService();\n    useEffect(() => {\n        productService.getProducts().then((data) => {\n            // console.log(data);\n            setProducts(data);\n        });\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    const onSortChange = (event) => {\n        const value = event.value;\n        if (value.indexOf('!') === 0) {\n            setSortOrder(-1);\n            setSortField(value.substring(1, value.length));\n            setSortKey(value);\n        }\n        else {\n            setSortOrder(1);\n            setSortField(value);\n            setSortKey(value);\n        }\n    };\n    const renderListItem = (data) => {\n        return (React.createElement(\"div\", { className: \"col-12\" },\n            React.createElement(\"div\", { className: \"product-list-item\" },\n                React.createElement(\"img\", { src: `images/product/${data.image}`, onError: (e) => {\n                        e.currentTarget.onerror = null;\n                        e.currentTarget.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n                    }, alt: data.name }),\n                React.createElement(\"div\", { className: \"product-list-detail\" },\n                    React.createElement(\"div\", { className: \"product-name\" }, data.name),\n                    React.createElement(\"div\", { className: \"product-description\" }, data.description),\n                    React.createElement(Rating, { value: data.rating, readOnly: true, cancel: false }),\n                    React.createElement(\"i\", { className: \"pi pi-tag product-category-icon\" }),\n                    React.createElement(\"span\", { className: \"product-category\" }, data.category)),\n                React.createElement(\"div\", { className: \"product-list-action\" },\n                    React.createElement(\"span\", { className: \"product-price\" },\n                        \"$\",\n                        data.price),\n                    React.createElement(Button, { icon: \"pi pi-shopping-cart\", label: \"Add to Cart\", disabled: data.inventoryStatus === 'OUTOFSTOCK' }),\n                    React.createElement(\"span\", { className: `product-badge status-${data.inventoryStatus.toLowerCase()}` }, data.inventoryStatus)))));\n    };\n    const renderGridItem = (data) => {\n        return (React.createElement(\"div\", { className: \"col-12 md:col-4\" },\n            React.createElement(\"div\", { className: \"product-grid-item card\" },\n                React.createElement(\"div\", { className: \"product-grid-item-top\" },\n                    React.createElement(\"div\", null,\n                        React.createElement(\"i\", { className: \"pi pi-tag product-category-icon\" }),\n                        React.createElement(\"span\", { className: \"product-category\" }, data.category)),\n                    React.createElement(\"span\", { className: `product-badge status-${data.inventoryStatus.toLowerCase()}` }, data.inventoryStatus)),\n                React.createElement(\"div\", { className: \"product-grid-item-content\" },\n                    React.createElement(\"img\", { src: `images/product/${data.image}`, onError: (e) => {\n                            e.currentTarget.onerror = null;\n                            e.currentTarget.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n                        }, alt: data.name }),\n                    React.createElement(\"div\", { className: \"product-name\" }, data.name),\n                    React.createElement(\"div\", { className: \"product-description\" }, data.description),\n                    React.createElement(Rating, { value: data.rating, readOnly: true, cancel: false })),\n                React.createElement(\"div\", { className: \"product-grid-item-bottom\" },\n                    React.createElement(\"span\", { className: \"product-price\" },\n                        \"$\",\n                        data.price),\n                    React.createElement(Button, { icon: \"pi pi-shopping-cart\", label: \"Add to Cart\", disabled: data.inventoryStatus === 'OUTOFSTOCK' })))));\n    };\n    const itemTemplate = (product, layout) => {\n        if (!product) {\n            return;\n        }\n        if (layout === 'list')\n            return renderListItem(product);\n        else if (layout === 'grid')\n            return renderGridItem(product);\n    };\n    const renderHeader = () => {\n        return (React.createElement(\"div\", { className: \"grid grid-nogutter\" },\n            React.createElement(\"div\", { className: \"col-6\", style: { textAlign: 'left' } },\n                React.createElement(Dropdown, { options: sortOptions, value: sortKey, optionLabel: \"label\", placeholder: \"Sort By Price\", onChange: onSortChange })),\n            React.createElement(\"div\", { className: \"col-6\", style: { textAlign: 'right' } },\n                React.createElement(DataViewLayoutOptions, { layout: layout, onChange: (e) => setLayout(e.value) }))));\n    };\n    const header = renderHeader();\n    const counter = useAppSelector((state) => selectCount(state));\n    const appDispatch = useAppDispatch();\n    const add = () => appDispatch(counterActions.increment());\n    return (React.createElement(\"div\", { className: \"dataview-demo\" },\n        \"counter: \",\n        counter,\n        \" \",\n        React.createElement(Button, { label: \"Count\", className: \"mr-1\", onClick: add }),\n        React.createElement(\"div\", { className: \"card\" },\n            layout === 'list' && React.createElement(ListView, { data: products, header: header }),\n            layout === 'grid' && React.createElement(DataView, { value: products, layout: layout, header: header, itemTemplate: itemTemplate, paginator: true, rows: 9, sortOrder: sortOrder, sortField: sortField }))));\n};\nexport default Purchase;\n"],"names":["ProductService","fetch","then","res","json","d","data","header","useState","customers","setCustomers","selectedCustomers","setSelectedCustomers","value","matchMode","FilterMatchMode","operator","FilterOperator","constraints","filters","useEffect","React","DataTable","paginator","className","rows","paginatorTemplate","rowsPerPageOptions","dataKey","rowHover","selection","onSelectionChange","e","filterDisplay","responsiveLayout","globalFilterFields","emptyMessage","currentPageReportTemplate","Column","selectionMode","headerStyle","width","field","sortable","filter","filterPlaceholder","style","minWidth","dataType","body","rowData","price","toLocaleString","currency","filterElement","options","InputNumber","onChange","filterCallback","index","mode","locale","filterMenuStyle","showFilterMatchModes","textAlign","bodyStyle","overflow","Button","type","icon","products","setProducts","layout","setLayout","sortKey","setSortKey","sortOrder","setSortOrder","undefined","sortField","setSortField","sortOptions","label","productService","getProducts","onSortChange","event","indexOf","substring","length","Dropdown","optionLabel","placeholder","DataViewLayoutOptions","counter","useAppSelector","state","selectCount","appDispatch","useAppDispatch","onClick","counterActions","ListView","DataView","itemTemplate","product","src","image","onError","currentTarget","onerror","alt","name","description","Rating","rating","readOnly","cancel","category","disabled","inventoryStatus","toLowerCase","renderGridItem"],"sourceRoot":""}