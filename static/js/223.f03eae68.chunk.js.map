{"version":3,"file":"static/js/223.f03eae68.chunk.js","mappings":"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","sources":["../../../modules/projects/dist/esm/main/CreateProject.js"],"sourcesContent":["import React from 'react';\nimport { Splitter, SplitterPanel } from 'primereact/splitter';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Image } from 'primereact/image';\nimport { classNames } from \"primereact/utils\";\nimport { Toolbar } from 'primereact/toolbar';\nimport { Link } from 'react-router-dom';\nconst CreateProject = () => {\n    const defaultValues = {};\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\n    const getFormErrorMessage = (name) => {\n        return (\n        //@ts-ignore\n        errors[name] && React.createElement(\"small\", { className: \"p-error\" }, errors[name].message));\n    };\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n    const InputComponent = (fieldName, label) => {\n        return (React.createElement(Splitter, { className: \"field\" },\n            React.createElement(SplitterPanel, { size: 30, minSize: 20, style: { marginTop: 8 } },\n                React.createElement(\"label\", { htmlFor: fieldName, style: { fontSize: 20, marginTop: 20 }, \n                    //@ts-ignore \n                    className: classNames({ \"p-error\": errors[fieldName] }) }, label)),\n            React.createElement(SplitterPanel, { size: 70, minSize: 40 },\n                React.createElement(\"span\", { className: \"p-float-label\" },\n                    React.createElement(Controller, { name: fieldName, control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                        //@ts-ignore \n                        React.createElement(InputText, Object.assign({ id: field[fieldName] }, field, { style: { width: '90%' }, className: classNames({ 'p-invalid': fieldState.invalid }) }))) })),\n                getFormErrorMessage(fieldName))));\n    };\n    const DropdownComponent = (fieldName, label) => {\n        return (React.createElement(Splitter, { className: \"field\" },\n            React.createElement(SplitterPanel, { size: 30, minSize: 20, style: { marginTop: 8 } },\n                React.createElement(\"label\", { htmlFor: fieldName, style: { fontSize: 20, marginTop: 20 }, \n                    //@ts-ignore \n                    className: classNames({ \"p-error\": errors[fieldName] }) }, label)),\n            React.createElement(SplitterPanel, { size: 70, minSize: 40 },\n                React.createElement(\"span\", { className: \"p-float-label flex\" },\n                    React.createElement(Controller, { name: fieldName, control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                        //@ts-ignore \n                        React.createElement(Dropdown, { id: field[fieldName], value: field.value, style: { width: '90%' }, onChange: (e) => field.onChange(e.value), options: [\"qa\", \"ws\"] })) })),\n                getFormErrorMessage(fieldName))));\n    };\n    return (React.createElement(Splitter, { style: { minHeight: 'calc(100vh - 63px)' } },\n        React.createElement(SplitterPanel, { size: 80, minSize: 50 },\n            React.createElement(Splitter, { layout: \"vertical\" },\n                React.createElement(SplitterPanel, null,\n                    React.createElement(Toolbar, { style: { backgroundColor: 'white' }, left: React.createElement(\"h2\", null, \" New Project\"), right: React.createElement(React.Fragment, null,\n                            React.createElement(Button, { label: 'Save', onClick: () => { var _a; return (_a = document.getElementById('form-submit')) === null || _a === void 0 ? void 0 : _a.click(); }, style: { paddingRight: 20 }, className: \"p-button-warning mr-3\" }),\n                            React.createElement(Link, { to: \"/projects\" },\n                                React.createElement(Button, { label: 'Discard' }))) })),\n                React.createElement(SplitterPanel, { className: 'card', style: { backgroundColor: 'lightgray' } },\n                    React.createElement(Splitter, null,\n                        React.createElement(SplitterPanel, null,\n                            React.createElement(\"div\", { className: \"card\", style: { width: '100%' } },\n                                React.createElement(\"div\", { className: \"flex justify-content-center\", style: { width: 'inherit' } },\n                                    React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit), style: { width: 'inherit', maxHeight: '600px', overflowY: 'auto', overflowX: 'hidden' } },\n                                        InputComponent(\"projectId\", \"Project ID\"),\n                                        InputComponent(\"projectName\", \"Project Name\"),\n                                        DropdownComponent(\"projectType\", \"Project Type\"),\n                                        InputComponent(\"address1\", \"Address Line 1\"),\n                                        InputComponent(\"address2\", \"Address Line 2\"),\n                                        DropdownComponent(\"state\", \"State\"),\n                                        DropdownComponent(\"city\", \"City\"),\n                                        InputComponent(\"posessionBy\", \"Posession By\"),\n                                        React.createElement(Splitter, { className: \"field\" },\n                                            React.createElement(SplitterPanel, { size: 30, minSize: 20, style: { marginTop: 8 } },\n                                                React.createElement(\"label\", { htmlFor: \"landArea\", style: { fontSize: 20, marginTop: 20 }, \n                                                    //@ts-ignore \n                                                    className: classNames({ \"p-error\": errors[\"landArea\"] }) }, \"Total Land Area\")),\n                                            React.createElement(SplitterPanel, { size: 70, minSize: 40 },\n                                                React.createElement(\"span\", { className: \"p-float-label flex\" },\n                                                    React.createElement(Controller, { name: \"landArea\", control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                                                        //@ts-ignore \n                                                        React.createElement(Dropdown, { id: field[\"landArea\"], value: field.value, style: { width: '90%', marginRight: 10 }, onChange: (e) => field.onChange(e.value), options: [\"qa\", \"ws\"] })) }),\n                                                    React.createElement(Controller, { name: \"landArea\", control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                                                        //@ts-ignore \n                                                        React.createElement(Dropdown, { id: field[\"landArea\"], value: field.value, style: { width: '90%', marginRight: 10 }, onChange: (e) => field.onChange(e.value), options: [\"qa\", \"ws\"] })) })),\n                                                getFormErrorMessage(\"landArea\"))),\n                                        InputComponent(\"noOfUnits\", \"No of Units\"),\n                                        DropdownComponent(\"projectStatus\", \"Project Status\"),\n                                        React.createElement(Splitter, { className: \"field\" },\n                                            React.createElement(SplitterPanel, { size: 30, minSize: 20, style: { marginTop: 8 } },\n                                                React.createElement(\"label\", { htmlFor: \"salePrice\", style: { fontSize: 20, marginTop: 20 }, \n                                                    //@ts-ignore \n                                                    className: classNames({ \"p-error\": errors[\"salePrice\"] }) }, \"Sale Price\")),\n                                            React.createElement(SplitterPanel, { size: 70, minSize: 40 },\n                                                React.createElement(\"span\", { className: \"p-float-label flex\" },\n                                                    React.createElement(Controller, { name: \"salePrice\", control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                                                        //@ts-ignore \n                                                        React.createElement(Dropdown, { id: field[\"salePrice\"], value: field.value, style: { width: '90%', marginRight: 10 }, onChange: (e) => field.onChange(e.value), options: [\"qa\", \"ws\"] })) }),\n                                                    React.createElement(Controller, { name: \"salePrice\", control: control, rules: { required: 'This field is required' }, render: ({ field, fieldState }) => (\n                                                        //@ts-ignore \n                                                        React.createElement(Dropdown, { id: field[\"salePrice\"], value: field.value, style: { width: '90%', marginRight: 10 }, onChange: (e) => field.onChange(e.value), options: [\"qa\", \"ws\"] })) })),\n                                                getFormErrorMessage(\"salePrice\"))),\n                                        React.createElement(Button, { id: 'form-submit', style: { display: 'none' }, type: \"submit\", label: \"Submit\", className: \"mt-2\" }))))),\n                        React.createElement(SplitterPanel, null,\n                            React.createElement(\"div\", { className: \"card\" },\n                                React.createElement(Button, { label: 'Stage/Tasks', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Payment', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Estimates', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Floor/Units', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Material Specs', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Bill of Qty', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Availability', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Proximity', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Approvals', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Change Status', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Amenities', className: 'project-page-tags col-3' }),\n                                React.createElement(Button, { label: 'Addl Desc', className: 'project-page-tags col-3' }),\n                                React.createElement(Splitter, null,\n                                    React.createElement(SplitterPanel, { className: \"align-items-center justify-content-center\", size: 45, minSize: 10 },\n                                        React.createElement(Button, { style: { width: '55%' }, label: 'Addl Desc', className: 'project-page-tags' }),\n                                        React.createElement(Button, { style: { width: '55%' }, label: 'Addl Desc', className: 'project-page-tags' })),\n                                    React.createElement(SplitterPanel, { size: 45 },\n                                        React.createElement(Image, { preview: true, width: '100%', style: { padding: 20, marginTop: 'auto' }, src: \"https://www.primefaces.org/primereact/images/galleria/galleria7.jpg\", alt: \"Image Text\" }),\n                                        React.createElement(Button, { className: \"p-button-warning mr-3\", style: { width: '100%' }, label: \"Add Image\" })),\n                                    React.createElement(SplitterPanel, { size: 10 }))))))))));\n};\nexport default CreateProject;\n"],"names":["useForm","defaultValues","control","errors","formState","handleSubmit","getFormErrorMessage","reset","name","React","className","message","InputComponent","fieldName","label","Splitter","SplitterPanel","size","minSize","style","marginTop","htmlFor","fontSize","classNames","Controller","rules","required","render","field","fieldState","InputText","Object","assign","id","width","invalid","DropdownComponent","Dropdown","value","onChange","e","options","minHeight","layout","Toolbar","backgroundColor","left","right","Button","onClick","_a","document","getElementById","click","paddingRight","Link","to","onSubmit","data","console","log","maxHeight","overflowY","overflowX","marginRight","display","type","Image","preview","padding","src","alt"],"sourceRoot":""}